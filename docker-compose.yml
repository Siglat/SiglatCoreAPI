version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: siglat-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: siglat
      POSTGRES_USER: siglat_user
      POSTGRES_PASSWORD: ${DB_PASS:-SiglatSecure2025!}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - siglat-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U siglat_user -d siglat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  siglat-core-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: siglat-core-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: siglat_user
      DB_PASS: ${DB_PASS:-SiglatSecure2025!}
      DB_DB: siglat
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this}
      JWT_ISSUER: siglat-core-api
      JWT_AUDIENCE: siglat-clients
      ASPNETCORE_ENVIRONMENT: Production
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001,http://localhost:3002
    ports:
      - "5000:8080"
    networks:
      - siglat-network
    volumes:
      - api_logs:/app/logs

  # Future frontend services will be added here
  # citizen-ui:
  #   build: ../frontends/citizen-ui
  #   ports:
  #     - "3000:3000"
  
  # ambulance-ui:
  #   build: ../frontends/ambulance-ui  
  #   ports:
  #     - "3001:3000"
  
  # admin-ui:
  #   build: ../frontends/admin-ui
  #   ports:
  #     - "3002:3000"

volumes:
  postgres_data:
    driver: local
  api_logs:
    driver: local

networks:
  siglat-network:
    driver: bridge